% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeLists.R
\name{mergeLists}
\alias{mergeLists}
\title{Merges multiple lists into a single list.}
\usage{
mergeLists(x, func, which.names = NULL, from = c("left", "right")[1],
  allow.ragged = FALSE, warn = if (allow.ragged) TRUE else FALSE)
}
\arguments{
\item{x}{List of lists \strong{required}.}

\item{func}{Function with arity \code{length(x)} \strong{required}.}

\item{which.names}{Integer index of the list in \code{x} from which to copy 
names, default \code{NULL} indicates not to copy any names \strong{optional}.}

\item{from}{Whether to reduce from left or right, defaults to \code{'left'},
alternative \code{'right'} \strong{optional}.}

\item{allow.ragged}{Whether to allow input lists of unequal length, 
defaults to \code{FALSE} \strong{optional}.}

\item{warn}{Logical indicating whether to signal a warning if the name 
vector specified by \code{which.names} does not have the same length as 
the longest list of \code{x} \strong{optional}.}
}
\value{
List.
}
\description{
Merges multiple lists into a single list.
}
\details{
If the input lists are of unequal length an error is thrown unless
\code{allow.ragged} is set to \code{TRUE}. The warn parameter is only of 
relevance when \code{x} is ragged (input lists are of unequal length). In 
such a case just make sure the name vector referenced via \code{which.names}
has the same length as the longest list of \code{x}. Each iteration 
\code{func} is called with the current items of \eqn{x[1...n]} as arguments. 
If \code{x} is ragged missing values for current items are represented by 
\code{NULL}.
}
\seealso{
\code{\link{octostep}}
}

